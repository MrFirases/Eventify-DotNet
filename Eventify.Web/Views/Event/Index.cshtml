@using Eventify.Web.Controllers
@model IEnumerable<Eventify.Data.Models.Myevent>
@{
    ViewBag.Title = "Index";
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- BEGIN PAGE LEVEL SCRIPTS -->
    <script src="~/Scripts/components-date-time-pickers.min.js" type="text/javascript">
    </script>
    <script src="~/Scripts/moment.min.js" type="text/javascript">
    </script>
    <script src="~/Scripts/bootstrap-daterangepicker/daterangepicker.min.js" type="text/javascript">
    </script>
    <script src="~/Scripts/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript">
    </script>
    <script src="~/Scripts/bootstrap-timepicker/js/bootstrap-timepicker.min.js" type="text/javascript">
    </script>
    <script src="~/Scripts/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js" type="text/javascript">
    </script>
    <script src="~/Scripts/clockface/js/clockface.js" type="text/javascript">
    </script>
    <script src="~/Scripts/ui-confirmations.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap-confirmation.min.js" type="text/javascript"></script>
   <script type='text/javascript'>
        function updateCount() {
            $.getJSON("/Event/ViewNbCount", function (dataResponse) {

                $("#toto").val(dataResponse);
                


            });
        }
</script>

<script type="text/javascript">

</script>
    
    <script type="text/javascript">
        $(function () {
            $(document).ready(function () {
                Highcharts.setOptions({
                    global: {
                        useUTC: false
                    }
                });

                Highcharts.chart('Number of Views', {
                    chart: {
                        type: 'spline',
                        animation: Highcharts.svg, // don't animate in old IE
                        marginRight: 10,
                        events: {
                            load: function () {

                                @{var c = new EventController();}
                                // set up the updating of the chart each second
                                var series = this.series[0];
                                setInterval(function () {
                                    updateCount();//Get Number of Views
                                    var x = (new Date()).getTime(), // current time

                                        y = parseInt($("#toto").val());
                                    series.addPoint([x, y], true, true);

                                }, 1000);
                            }
                        }
                    },
                    title: {
                        text: 'Live random data'
                    },
                    xAxis: {
                        type: 'datetime',
                        tickPixelInterval: 150
                    },
                    yAxis: {
                        title: {
                            text: 'Value'
                        },
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        formatter: function () {
                            return '<b>' + this.series.name + '</b><br/>' +
                                Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
                                Highcharts.numberFormat(this.y, 2);
                        }
                    },
                    legend: {
                        enabled: false
                    },
                    exporting: {
                        enabled: false
                    },
                    series: [{
                        name: 'Numbers of Views',
                        data: (function () {
                            // generate an array of random data
                            var data = [],
                                time = (new Date()).getTime(),
                                i;

                            for (i = -19; i <= 0; i += 1) {
                                data.push({
                                    x: time + i * 1000,
                                    y: parseInt($("#toto").val())
                                });
                            }
                            return data;
                        }())
                    }]
                });
            });
        });

</script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
}


<input id="toto" type="hidden" name="name" value="" />
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="icon-calendar"></i>
            <a href="@Url.Action("Index", "Event")">EVENTS</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <a href="@Url.Action("Index", "Event")">All Events</a>
           
        </li>
      
    </ul>
 
</div>
<!-- END PAGE HEADER-->

<div class="portfolio-content portfolio-1">
    <div id="js-filters-juicy-projects" class="cbp-l-filters-button">
        <div style="padding: 5px 10px;" data-filter="*" class="cbp-filter-item-active cbp-filter-item btn dark btn-outline uppercase">
            All
            <div class="cbp-filter-counter"></div>
        </div>
        @foreach (var itemCategories in ViewBag.MyCategories)
        {
            <div style="padding: 5px 10px;" data-filter=".@itemCategories.categoryName" class="cbp-filter-item btn dark btn-outline uppercase">
                @itemCategories.categoryName
                <div class="cbp-filter-counter"></div>
            </div>

        }

    </div>


    <div id="js-grid-juicy-projects" class="cbp">

        @foreach (var item in Model)
        {


            <div class="cbp-item graphic @Html.DisplayFor(modelItem => item.category.categoryName)">
                <div class="cbp-caption">
                    <div class="cbp-caption-defaultWrap">
                        <img src="
                             @{  foreach (var oneMedia in item.mymedias) { @oneMedia.pathMedia  break; } }
                             " alt="">

                    </div>
                    <div class="cbp-caption-activeWrap">
                        <div class="">
                            <div class="cbp-l-caption-body">
                                &nbsp;&nbsp;&nbsp;&nbsp;
                                <a href="@Url.Action("Details", "Event", new {id = item.id})" class="cbp-singlePage cbp-l-caption-buttonLeft btn red uppercase btn red uppercase" rel="nofollow">more info</a>
                                <a href="@Url.Action("Edit", "Event", new {id = item.id})" class="btn red uppercase btn red uppercase" rel="nofollow">Edit</a>
                                <a href=" @{
                                              foreach (var oneMedia in item.mymedias)
                                              {
                                                  @oneMedia.pathMedia
                                                  break;
                                              }
                                          } " class="cbp-lightbox cbp-l-caption-buttonRight btn red uppercase btn red uppercase" data-title="@item.title <br>by @item.organization.organizationName">
                                    view larger
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="cbp-l-grid-projects-title uppercase text-center uppercase text-center">@Html.DisplayFor(modelItem => item.title)</div>
                <div class="cbp-l-grid-projects-desc uppercase text-center uppercase text-center">@Html.DisplayFor(modelItem => item.category.categoryName)</div>
            </div>






    }
    </div>
    <div id="js-loadMore-juicy-projects" class="cbp-l-loadMore-button">
        <a style="padding: 5px 25px;"  href="#" class="cbp-l-loadMore-link btn grey-mint btn-outline" rel="nofollow">
            <span class="cbp-l-loadMore-defaultText">LOAD MORE</span>
            <span class="cbp-l-loadMore-loadingText">LOADING...</span>
            <span class="cbp-l-loadMore-noMoreLoading">NO MORE EVENTS</span>
        </a>
    </div>

   

    <div id="coco" style="min-width: 310px; height: 400px; margin: 0 auto"></div>






</div>
