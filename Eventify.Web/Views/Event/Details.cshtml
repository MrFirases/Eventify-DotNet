@model Eventify.Data.Models.Myevent

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
    <style type="text/css">

        #map {
            height: 500px;
            width: 500px;
        }
    </style>
</head>
<body>
    <div id="map"></div>

    <script>
        function initMap() {
            var theLatDot = parseFloat(@Html.DisplayFor(model => model.latitude));
            var theLangDot= parseFloat(@Html.DisplayFor(model => model.longitude));


            var myLatLng = {lat: theLatDot , lng: theLangDot};

        // Create a map object and specify the DOM element for display.
        var map = new google.maps.Map(document.getElementById('map'), {
          center: myLatLng,
          scrollwheel: false,
          zoom: 4
        });

        // Create a marker and set its position.
        var marker = new google.maps.Marker({
          map: map,
          position: myLatLng,
          title: 'Hello World!'
        });
      }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDYjng3LaxZV4VykkpjuvuxPS3ePdSjDBQ&callback=initMap"></script>

<div>
    <h4>Myevent</h4>
    <hr/>
    
    
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.createdAt)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.createdAt)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.endTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.endTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.eventState)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.eventState)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.eventType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.eventType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.facebookLink)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.facebookLink)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.latitude)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.latitude)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.longitude)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.longitude)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.nbViews)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.nbViews)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.placeNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.placeNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.startTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.startTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.theme)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.theme)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.twitterLink)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.twitterLink)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.category_id)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.category_id)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.organization_id)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.organization_id)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new {id = Model.id}) |
    @Html.ActionLink("Back to List", "Index")
</p>



</body>
</html>
