@model IEnumerable<Eventify.Data.Models.Reservation>

@{
    ViewBag.Title = "StatisticsbyEventsAndTickets";
}


@section scripts{


    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/amcharts/amcharts.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/amcharts/serial.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/amcharts/pie.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/amcharts/radar.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/amcharts/themes/light.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/amcharts/themes/patterns.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/amcharts/themes/chalk.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/ammap/ammap.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/ammap/maps/js/worldLow.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/amcharts/amstockcharts/amstock.js" type="text/javascript"></script>

    <script src="@Url.Content("~/Content/")assets/global/plugins/echarts/echarts.js" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/")assets/global/plugins/highcharts/js/highcharts.js" type="text/javascript"></script>


    <script>

        var ChartsAmcharts = function() {
            var colors = [
                "#FF0F00", "#FF6600", "#FF9E01", "#FCD202", "#F8FF01", "#B0DE09", "#04D215", "#0D8ECF", "#0D52D1",
                "#2A0CD0", "#8A0CCF", "#CD0D74", "#754DEB", "#DDDDDD", "#999999", "#333333", "#000000"
            ];

            var initChartReservationByEvents = function() {
                var chart = AmCharts.makeChart("ReservationByEvents_chart",
                    {
                        "theme": "light",
                        "type": "serial",
                        "startDuration": 2,

                        "fontFamily": 'Open Sans',

                        "color": '#888',

                        "dataProvider": [

                            @foreach (dynamic item in @ViewBag.reservationsByEvents)
                            {
                                <text>{
                                "country": "@item.reservationState",
                                "visits": @Convert.ToInt32(item.amount),
                                "color": colors[Math.floor((Math.random() * 16) + 1)]
                            },</text>
                            }

                        ],
                        "valueAxes": [
                            {
                                "position": "left",
                                "axisAlpha": 0,
                                "gridAlpha": 0
                            }
                        ],
                        "graphs": [
                            {
                                "balloonText": "[[category]]: <b>[[value]]</b>",
                                "colorField": "color",
                                "fillAlphas": 0.85,
                                "lineAlpha": 0.1,
                                "type": "column",
                                "topRadius": 1,
                                "valueField": "visits"
                            }
                        ],
                        "depth3D": 40,
                        "angle": 30,
                        "chartCursor": {
                            "categoryBalloonEnabled": false,
                            "cursorAlpha": 0,
                            "zoomable": false
                        },
                        "categoryField": "country",
                        "categoryAxis": {
                            "gridPosition": "start",
                            "axisAlpha": 0,
                            "gridAlpha": 0

                        },
                        "exportConfig": {
                            "menuTop": "20px",
                            "menuRight": "20px",
                            "menuItems": [
                                {
                                    "icon": '/lib/3/images/export.png',
                                    "format": 'png'
                                }
                            ]
                        }
                    },
                    0);

                jQuery('.chart_5_chart_input')
                    .off()
                    .on('input change',
                        function() {
                            var property = jQuery(this).data('property');
                            var target = chart;
                            chart.startDuration = 0;

                            if (property == 'topRadius') {
                                target = chart.graphs[0];
                            }

                            target[property] = this.value;
                            chart.validateNow();
                        });

                $('#ReservationByEvents_chart')
                    .closest('.portlet')
                    .find('.fullscreen')
                    .click(function() {
                        chart.invalidateSize();
                    });
            }


            return {
                //main function to initiate the module
                init: function() {

                    initChartReservationByEvents();
                }

            };

        }();


        jQuery(document)
            .ready(function() {
                ChartsAmcharts.init();

                // ECHARTS
                require.config({
                    paths: {
                        echarts: '@Url.Content("~/Content/")assets/global/plugins/echarts/'
                    }
                });


                // DEMOS
                require(
                    [
                        'echarts',
                        'echarts/chart/bar',
                        'echarts/chart/chord',
                        'echarts/chart/eventRiver',
                        'echarts/chart/force',
                        'echarts/chart/funnel',
                        'echarts/chart/gauge',
                        'echarts/chart/heatmap',
                        'echarts/chart/k',
                        'echarts/chart/line',
                        'echarts/chart/map',
                        'echarts/chart/pie',
                        'echarts/chart/radar',
                        'echarts/chart/scatter',
                        'echarts/chart/tree',
                        'echarts/chart/treemap',
                        'echarts/chart/venn',
                        'echarts/chart/wordCloud'
                    ],
                    function(ec) {
                        //--- BAR ---
                        var myChart = ec.init(document.getElementById('echarts_bar'));
                        myChart.setOption({
                            tooltip: {
                                trigger: 'axis'
                            },
                            legend: {
                                data: ['Cost', 'Expenses']
                            },
                            toolbox: {
                                show: true,
                                feature: {
                                    mark: {
                                        show: true
                                    },
                                    dataView: {
                                        show: true,
                                        readOnly: false
                                    },
                                    magicType: {
                                        show: true,
                                        type: ['line', 'bar']
                                    },
                                    restore: {
                                        show: true
                                    },
                                    saveAsImage: {
                                        show: true
                                    }
                                }
                            },
                            calculable: true,
                            xAxis: [
                                {
                                    type: 'category',
                                    data: [
                                        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov',
                                        'Dec'
                                    ]
                                }
                            ],
                            yAxis: [
                                {
                                    type: 'value',
                                    splitArea: {
                                        show: true
                                    }
                                }
                            ],
                            series: [
                                {
                                    name: 'Cost',
                                    type: 'bar',
                                    data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3]
                                }, {
                                    name: 'Expenses',
                                    type: 'bar',
                                    data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3]
                                }
                            ]
                        });

                    }
                );


            });



        // DONUT CHART
        var colors = Highcharts.getOptions().colors,
            categories = [
                @foreach (dynamic item in @ViewBag.reservationsByEvents)
                {
                    <text>'@item.reservationState',</text>
                }
            ],
            data = [
                @foreach (dynamic item in @ViewBag.reservationsByEvents)
                {
                    <text>{
                    y:
                        @foreach (dynamic item2 in @ViewBag.reservationsByEvents)
                        {
                            if (item.reservationState == item2.reservationState)
                            {
                                float tot=0;
                                foreach (dynamic item3 in @ViewBag.reservationsByEvents)
                                 {
                                    tot =
                                     tot + item3.amount;
                                 }

                                <text>@Math.Round(@item2.amount / @tot * 100,2)</text>

                            }
                        }

                    ,
                    color: colors[Math.floor((Math.random() * 5) + 1)],
                    drilldown: {
                        name: '<text>@item.reservationState</text>',
                        categories: [
                            @foreach (dynamic ticket in @ViewBag.reservationsByTicketsEvents)
                            {
                                if (ticket.reservationState == item.reservationState)
                                {
                                    <text>'@ticket.paymentMethod',</text>
                                }
                            }
                        ],
                        data: [
                            @foreach (dynamic ticket in @ViewBag.reservationsByTicketsEvents)
                            {
                                if (ticket.reservationState == item.reservationState)
                                {
                                    var pourc = Math.Round(ticket.amount / item.amount * 100,1);

                                    <text>@pourc,</text>
                                }
                            }
                        ],
                        color: colors[0]
                    }
                },</text>
                }


            ],
            browserData = [],
            versionsData = [],
            i,
            j,
            dataLen = data.length,
            drillDataLen,
            brightness;


        // Build the data arrays
        for (i = 0; i < dataLen; i += 1) {

            // add browser data
            browserData.push({
                name: categories[i],
                y: data[i].y,
                color: data[i].color
            });

            // add version data
            drillDataLen = data[i].drilldown.data.length;
            for (j = 0; j < drillDataLen; j += 1) {
                brightness = 0.2 - (j / drillDataLen) / 5;
                versionsData.push({
                    name: data[i].drilldown.categories[j],
                    y: data[i].drilldown.data[j],
                    color: Highcharts.Color(data[i].color).brighten(brightness).get()
                });
            }
        }

        // Create the chart
        $('#highchart_5')
            .highcharts({
                chart: {
                    type: 'pie',
                    style: {
                        fontFamily: 'Open Sans'
                    }
                },
                title: {
                    text: 'Reservation By Events/Tickets'
                },
                subtitle: {
                    text: ''
                },
                yAxis: {
                    title: {
                        text: 'Total percent market share'
                    }
                },
                plotOptions: {
                    pie: {
                        shadow: false,
                        center: ['50%', '50%']
                    }
                },
                tooltip: {
                    valueSuffix: '%'
                },
                series: [
                    {
                        name: 'Events',
                        data: browserData,
                        size: '60%',
                        dataLabels: {
                            formatter: function() {
                                return this.y > 5 ? this.point.name : null;
                            },
                            color: '#ffffff',
                            distance: -30
                        }
                    }, {
                        name: 'Tickets',
                        data: versionsData,
                        size: '80%',
                        innerSize: '60%',
                        dataLabels: {
                            formatter: function() {
                                // display only if larger than 1
                                return this.y > 1 ? '<b>' + this.point.name + ':</b> ' + this.y + '%' : null;
                            }
                        }
                    }
                ]
            });


    </script>

}

<h2>Specific Insights</h2>

<div class="row">
    <div class="col-md-12">
        <!-- BEGIN CHART PORTLET-->
        <div class="portlet light ">
            <div class="portlet-title">
                <div class="caption">
                    <i class="icon-bar-chart font-green-haze"></i>
                    <span class="caption-subject bold uppercase font-green-haze"> 3D Chart</span>
                    <span class="caption-helper">3d cylinder chart</span>
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse"> </a>
                    <a href="#portlet-config" data-toggle="modal" class="config"> </a>
                    <a href="javascript:;" class="reload"> </a>
                    <a href="javascript:;" class="fullscreen"> </a>
                    <a href="javascript:;" class="remove"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="ReservationByEvents_chart" class="chart" style="height: 400px;"> </div>
                <div class="well margin-top-20">
                    <div class="row">
                        <div class="col-sm-3">
                            <label class="text-left">Top Radius:</label>
                            <input class="chart_5_chart_input" data-property="topRadius" type="range" min="0" max="1.5" value="1" step="0.01"/>
                        </div>
                        <div class="col-sm-3">
                            <label class="text-left">Angle:</label>
                            <input class="chart_5_chart_input" data-property="angle" type="range" min="0" max="89" value="30" step="1"/>
                        </div>
                        <div class="col-sm-3">
                            <label class="text-left">Depth:</label>
                            <input class="chart_5_chart_input" data-property="depth3D" type="range" min="1" max="120" value="40" step="1"/>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- END CHART PORTLET-->
    </div>

</div>


<div class="row">
    <div class="col-md-12">
        <div class="portlet light portlet-fit ">
            <div class="portlet-title">
                <div class="caption">
                    <i class=" icon-layers font-green"></i>
                    <span class="caption-subject font-green bold uppercase">Donut Chart</span>
                </div>
                <div class="actions">
                    <a class="btn btn-circle btn-icon-only btn-default" href="javascript:;">
                        <i class="icon-cloud-upload"></i>
                    </a>
                    <a class="btn btn-circle btn-icon-only btn-default" href="javascript:;">
                        <i class="icon-wrench"></i>
                    </a>
                    <a class="btn btn-circle btn-icon-only btn-default" href="javascript:;">
                        <i class="icon-trash"></i>
                    </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="highchart_5" style="height: 500px;"></div>
            </div>
        </div>
    </div>
</div>


@*Bar Chart*@
<div class="row">
    <div class="col-md-12">
        <div class="portlet light portlet-fit ">
            <div class="portlet-title">
                <div class="caption">
                    <i class=" icon-layers font-green"></i>
                    <span class="caption-subject font-green bold uppercase">Bar Chart</span>
                </div>
                <div class="actions">
                    <a class="btn btn-circle btn-icon-only btn-default" href="javascript:;">
                        <i class="icon-cloud-upload"></i>
                    </a>
                    <a class="btn btn-circle btn-icon-only btn-default" href="javascript:;">
                        <i class="icon-wrench"></i>
                    </a>
                    <a class="btn btn-circle btn-icon-only btn-default" href="javascript:;">
                        <i class="icon-trash"></i>
                    </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="echarts_bar" style="height: 500px;"></div>
            </div>
        </div>
    </div>
</div>

<h2>Ticket by events </h2>
<table>
    @foreach (dynamic item in @ViewBag.reservationsByTicketsEvents)
    {
        <tr>
            <td>@item.reservationState</td>
            <td>@item.paymentMethod</td>
            <td>@item.amount</td>
        </tr>
    }
</table>
<h2>DistinctEvents </h2>

<table>
    @foreach (dynamic item in @ViewBag.events)
    {
        <tr>
            <td>@item.reservationState</td>
            <td>@item.paymentMethod</td>
            <td>@item.amount</td>
        </tr>
    }
</table>